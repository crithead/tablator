.TH TABLATOR 1 "January 4, 2025" "Game Tools"
.SH NAME
tablator \- prints a random item from a table
.SH SYNOPSIS
.nf
.B tablator [ -c \fICONFIG\fR ] [ -d \fIDATA_DIR\fR ] [ -n \fINUMBER\fR ]
     [ -l | --list ] [ -p | --print ] [ -t | --trace ] [ -v | --verbose ]
     [ tables ... ]
.B tablator [-d \fIDATA_DIR\fR ] [ -l | --list ]
.B tablator [ -c \fICONFIG\fR ] [ -p | --print ] table
.B tablator [ -h | --help ]
.fi
.SH DESCRIPTION
.PP
Randomly select items from lookup tables.
.PP
There are two parts to this project, the tablator (Python) module and the
command line tool.  This page describes the command line tool.
.PP
The \fBtablator\fR tool is both an example of how to use the library and allows
use of the data sets.  It lists the available tables, prints tables to the
console, and roll (select a random row) on those tables.  The tools requires a
data directory, defined directly as a program argument, defined in a
configuration file, or it falls back to the current working directory.
.PP
The \fBtablator\fR Python module is a general purpose library for randomly
selecting results from look-up tables.  Each row in the table has a weight.
A number is randomly generated from 1 to "total weight" and the row
corresponding to that number is selected.
.PP
Tab-LA-tor. Originally called "treasure tables" was developed to roll up
magic items from the treasure tables in the AD&D DMG.
The name is a compaction of "table-ator".
It has nothing to do with guitar tablature.
.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Show usage information and exit
.TP
.BR \-c " " \fICONFIG\fR ", " \-\-config " " \fICONFIG\fR
Load configuration from this file
.TP
.BR \-d " " \fIDATA_DIR\fR ", " \-\-data-dir " " \fIDATA_DIR\fR
Set the table data directory
.TP
.BR \-n " " \fINUMBER\fR ", " \-\-number " " \fINUMBER\fR
Number of items to select from each table (default 1)
.TP
.BR \-l ", " \-\-list
List available tables (table file names sans extension in the data directory)
.TP
.BR \-p ", " \-\-print
Print the table (plain text)
.TP
.BR \-t ", " \-\-trace
Enable trace messages
.TP
.BR \-v ", " \-\-verbose
Enable debug messages
.SH EXIT STATUS
Zero if successful, 1 on any error.
.SH CONFIGURATION
.PP
The configuration file is a list of long command line options and values.
.PP
Configuration file are loaded in order of (1) \fB~/.ttrc\fR, (2) \fB./.ttrc\fR,
(3) --config \fIFILE\fR.  Each one overridding values set by prior files.
Configuration files that don't exist are skipped.
.PP
Configuration settings are in the form of "key = value" pairs, one per line.
Lines beginning with \fB#\fR and blank lines are ignored.
 Recognized keys are:
.TP
.BR data-dir
The data directory to use.  This is the only "required" key in a user's
configuration file.
.TP
.BR verbose
Prints messages that describe table processing.
For development and debugging.
.TP
.BR trace
Prints each function name as it is entered.
For development and debugging.
.SH ENVIRONMENT
.TP
.BR TABLATOR_CONFIG
The configuration file.  Not used (yet).
.TP
.BR TABLATOR_DATA_DIR
The data directory.  Not used (yet).
.SH EXAMPLES
.nf
python3 tablator.py --help
python3 tablator.py lair-a
python3 tablator.py --number 3 potions
python3 tablator.py --print scrolls
python3 tablator.py --data-dir ~/data/pathfinder-encounters dungeon-mid
python3 tablator.py -c addt.conf magic-item -n 3
python3 tablator.py -c addt.conf weapons rings scrolls
.fi
.SH BUGS
Various.
.SH SEE ALSO
The \fBREADME.md\fR file in
.UR https://github.com/crithead/tablator
.UE
along with the source.
